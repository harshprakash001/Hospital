"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/register";
exports.ids = ["pages/api/register"];
exports.modules = {

/***/ "bcrypt":
/*!*************************!*\
  !*** external "bcrypt" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("bcrypt");

/***/ }),

/***/ "mysql2/promise":
/*!*********************************!*\
  !*** external "mysql2/promise" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("mysql2/promise");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fregister&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cregister.js&middlewareConfigBase64=e30%3D!":
/*!**********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fregister&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cregister.js&middlewareConfigBase64=e30%3D! ***!
  \**********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_register_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\register.js */ \"(api)/./pages/api/register.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_register_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_register_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/register\",\n        pathname: \"/api/register\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_register_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnJlZ2lzdGVyJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGcGFnZXMlNUNhcGklNUNyZWdpc3Rlci5qcyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDTDtBQUMxRDtBQUNzRDtBQUN0RDtBQUNBLGlFQUFlLHdFQUFLLENBQUMsbURBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLG1EQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLGdIQUFtQjtBQUNsRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCIsInNvdXJjZXMiOlsid2VicGFjazovL2hvc3BpdGFsLW1hbmFnZW1lbnQvP2ZhZTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzXFxcXGFwaVxcXFxyZWdpc3Rlci5qc1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3JlZ2lzdGVyXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvcmVnaXN0ZXJcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fregister&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cregister.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/dbConnect.js":
/*!**************************!*\
  !*** ./lib/dbConnect.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dbConnect: () => (/* binding */ dbConnect)\n/* harmony export */ });\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mysql2/promise */ \"mysql2/promise\");\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mysql2_promise__WEBPACK_IMPORTED_MODULE_0__);\n// import mysql from 'mysql2/promise';\n// let connection;\n// const mysql = require('mysql2');\n// require('dotenv').config(); // Load environment variables\n// // Create a connection to the database\n// const connection = mysql.createConnection({\n//   host: process.env.DB_HOST,      // Use host from .env.local\n//   user: process.env.DB_USER,      // Use username from .env.local\n//   password: process.env.DB_PASSWORD, // Use blank password from .env.local\n//   database: process.env.DB_NAME    // Use database name from .env.local\n// });\n// // Connect to MySQL\n// connection.connect((err) => {\n//   if (err) {\n//     console.error('Error connecting: ' + err.stack);\n//     return;\n//   }\n//   console.log('Connected as id ' + connection.threadId);\n// });\n// module.exports = connection; // Export the connection for use in other files\n\nlet connection;\nasync function dbConnect() {\n    if (!connection) {\n        connection = await mysql2_promise__WEBPACK_IMPORTED_MODULE_0___default().createConnection({\n            host: process.env.MYSQL_HOST || \"localhost\",\n            user: process.env.MYSQL_USER || \"root\",\n            password: process.env.MYSQL_PASSWORD || \"\",\n            database: process.env.MYSQL_DATABASE || \"ram\",\n            waitForConnections: true,\n            connectionLimit: 10,\n            queueLimit: 0\n        });\n    }\n    return connection;\n} // import mysql from 'mysql2/promise';\n // async function dbConnect() {\n //   try {\n //     const connection = await mysql.createConnection({\n //       host: process.env.DB_HOST || 'localhost',\n //       user: process.env.DB_USER || 'root',\n //       password: process.env.DB_PASSWORD || '',\n //       database: process.env.DB_NAME || 'ram'\n //     });\n //     console.log('Database connected successfully!');\n //     return connection;\n //   } catch (error) {\n //     console.error('Database connection failed:', error);\n //     throw error; // Re-throw the error for further handling\n //   }\n // }\n // export default dbConnect; // Make sure this line is present\n // async function testConnection() {\n //   const db = await dbConnect();\n //   console.log('Database connected successfully!');\n //   await db.end();\n // }\n // testConnection().catch(console.error);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvZGJDb25uZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUlBLHNDQUFzQztBQUV0QyxrQkFBa0I7QUFHbEIsbUNBQW1DO0FBQ25DLDREQUE0RDtBQUU1RCx5Q0FBeUM7QUFDekMsOENBQThDO0FBQzlDLGdFQUFnRTtBQUNoRSxvRUFBb0U7QUFDcEUsNkVBQTZFO0FBQzdFLDBFQUEwRTtBQUMxRSxNQUFNO0FBRU4sc0JBQXNCO0FBQ3RCLGdDQUFnQztBQUNoQyxlQUFlO0FBQ2YsdURBQXVEO0FBQ3ZELGNBQWM7QUFDZCxNQUFNO0FBQ04sMkRBQTJEO0FBQzNELE1BQU07QUFFTiwrRUFBK0U7QUFFNUM7QUFFbkMsSUFBSUM7QUFFRyxlQUFlQztJQUNwQixJQUFJLENBQUNELFlBQVk7UUFDZkEsYUFBYSxNQUFNRCxzRUFBc0IsQ0FBQztZQUN4Q0ksTUFBTUMsUUFBUUMsR0FBRyxDQUFDQyxVQUFVLElBQUk7WUFDaENDLE1BQU1ILFFBQVFDLEdBQUcsQ0FBQ0csVUFBVSxJQUFJO1lBQ2hDQyxVQUFVTCxRQUFRQyxHQUFHLENBQUNLLGNBQWMsSUFBSTtZQUN4Q0MsVUFBVVAsUUFBUUMsR0FBRyxDQUFDTyxjQUFjLElBQUk7WUFDeENDLG9CQUFvQjtZQUNwQkMsaUJBQWlCO1lBQ2pCQyxZQUFZO1FBQ2Q7SUFDRjtJQUNBLE9BQU9mO0FBQ1QsRUFNQSxzQ0FBc0M7Q0FFdEMsK0JBQStCO0NBQy9CLFVBQVU7Q0FDVix3REFBd0Q7Q0FDeEQsa0RBQWtEO0NBQ2xELDZDQUE2QztDQUM3QyxpREFBaUQ7Q0FDakQsK0NBQStDO0NBQy9DLFVBQVU7Q0FDVix1REFBdUQ7Q0FDdkQseUJBQXlCO0NBQ3pCLHNCQUFzQjtDQUN0QiwyREFBMkQ7Q0FDM0QsOERBQThEO0NBQzlELE1BQU07Q0FDTixJQUFJO0NBRUosOERBQThEO0NBUTlELG9DQUFvQztDQUNwQyxrQ0FBa0M7Q0FDbEMscURBQXFEO0NBQ3JELG9CQUFvQjtDQUNwQixJQUFJO0NBRUoseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9zcGl0YWwtbWFuYWdlbWVudC8uL2xpYi9kYkNvbm5lY3QuanM/MWQzYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcblxyXG5cclxuLy8gaW1wb3J0IG15c3FsIGZyb20gJ215c3FsMi9wcm9taXNlJztcclxuXHJcbi8vIGxldCBjb25uZWN0aW9uO1xyXG5cclxuXHJcbi8vIGNvbnN0IG15c3FsID0gcmVxdWlyZSgnbXlzcWwyJyk7XHJcbi8vIHJlcXVpcmUoJ2RvdGVudicpLmNvbmZpZygpOyAvLyBMb2FkIGVudmlyb25tZW50IHZhcmlhYmxlc1xyXG5cclxuLy8gLy8gQ3JlYXRlIGEgY29ubmVjdGlvbiB0byB0aGUgZGF0YWJhc2VcclxuLy8gY29uc3QgY29ubmVjdGlvbiA9IG15c3FsLmNyZWF0ZUNvbm5lY3Rpb24oe1xyXG4vLyAgIGhvc3Q6IHByb2Nlc3MuZW52LkRCX0hPU1QsICAgICAgLy8gVXNlIGhvc3QgZnJvbSAuZW52LmxvY2FsXHJcbi8vICAgdXNlcjogcHJvY2Vzcy5lbnYuREJfVVNFUiwgICAgICAvLyBVc2UgdXNlcm5hbWUgZnJvbSAuZW52LmxvY2FsXHJcbi8vICAgcGFzc3dvcmQ6IHByb2Nlc3MuZW52LkRCX1BBU1NXT1JELCAvLyBVc2UgYmxhbmsgcGFzc3dvcmQgZnJvbSAuZW52LmxvY2FsXHJcbi8vICAgZGF0YWJhc2U6IHByb2Nlc3MuZW52LkRCX05BTUUgICAgLy8gVXNlIGRhdGFiYXNlIG5hbWUgZnJvbSAuZW52LmxvY2FsXHJcbi8vIH0pO1xyXG5cclxuLy8gLy8gQ29ubmVjdCB0byBNeVNRTFxyXG4vLyBjb25uZWN0aW9uLmNvbm5lY3QoKGVycikgPT4ge1xyXG4vLyAgIGlmIChlcnIpIHtcclxuLy8gICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGNvbm5lY3Rpbmc6ICcgKyBlcnIuc3RhY2spO1xyXG4vLyAgICAgcmV0dXJuO1xyXG4vLyAgIH1cclxuLy8gICBjb25zb2xlLmxvZygnQ29ubmVjdGVkIGFzIGlkICcgKyBjb25uZWN0aW9uLnRocmVhZElkKTtcclxuLy8gfSk7XHJcblxyXG4vLyBtb2R1bGUuZXhwb3J0cyA9IGNvbm5lY3Rpb247IC8vIEV4cG9ydCB0aGUgY29ubmVjdGlvbiBmb3IgdXNlIGluIG90aGVyIGZpbGVzXHJcblxyXG5pbXBvcnQgbXlzcWwgZnJvbSAnbXlzcWwyL3Byb21pc2UnO1xyXG5cclxubGV0IGNvbm5lY3Rpb247XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZGJDb25uZWN0KCkge1xyXG4gIGlmICghY29ubmVjdGlvbikge1xyXG4gICAgY29ubmVjdGlvbiA9IGF3YWl0IG15c3FsLmNyZWF0ZUNvbm5lY3Rpb24oe1xyXG4gICAgICBob3N0OiBwcm9jZXNzLmVudi5NWVNRTF9IT1NUIHx8ICdsb2NhbGhvc3QnLFxyXG4gICAgICB1c2VyOiBwcm9jZXNzLmVudi5NWVNRTF9VU0VSIHx8ICdyb290JyxcclxuICAgICAgcGFzc3dvcmQ6IHByb2Nlc3MuZW52Lk1ZU1FMX1BBU1NXT1JEIHx8ICcnLFxyXG4gICAgICBkYXRhYmFzZTogcHJvY2Vzcy5lbnYuTVlTUUxfREFUQUJBU0UgfHwgJ3JhbScsXHJcbiAgICAgIHdhaXRGb3JDb25uZWN0aW9uczogdHJ1ZSxcclxuICAgICAgY29ubmVjdGlvbkxpbWl0OiAxMCxcclxuICAgICAgcXVldWVMaW1pdDogMCxcclxuICAgIH0pO1xyXG4gIH1cclxuICByZXR1cm4gY29ubmVjdGlvbjtcclxufVxyXG5cclxuXHJcblxyXG5cclxuXHJcbi8vIGltcG9ydCBteXNxbCBmcm9tICdteXNxbDIvcHJvbWlzZSc7XHJcblxyXG4vLyBhc3luYyBmdW5jdGlvbiBkYkNvbm5lY3QoKSB7XHJcbi8vICAgdHJ5IHtcclxuLy8gICAgIGNvbnN0IGNvbm5lY3Rpb24gPSBhd2FpdCBteXNxbC5jcmVhdGVDb25uZWN0aW9uKHtcclxuLy8gICAgICAgaG9zdDogcHJvY2Vzcy5lbnYuREJfSE9TVCB8fCAnbG9jYWxob3N0JyxcclxuLy8gICAgICAgdXNlcjogcHJvY2Vzcy5lbnYuREJfVVNFUiB8fCAncm9vdCcsXHJcbi8vICAgICAgIHBhc3N3b3JkOiBwcm9jZXNzLmVudi5EQl9QQVNTV09SRCB8fCAnJyxcclxuLy8gICAgICAgZGF0YWJhc2U6IHByb2Nlc3MuZW52LkRCX05BTUUgfHwgJ3JhbSdcclxuLy8gICAgIH0pO1xyXG4vLyAgICAgY29uc29sZS5sb2coJ0RhdGFiYXNlIGNvbm5lY3RlZCBzdWNjZXNzZnVsbHkhJyk7XHJcbi8vICAgICByZXR1cm4gY29ubmVjdGlvbjtcclxuLy8gICB9IGNhdGNoIChlcnJvcikge1xyXG4vLyAgICAgY29uc29sZS5lcnJvcignRGF0YWJhc2UgY29ubmVjdGlvbiBmYWlsZWQ6JywgZXJyb3IpO1xyXG4vLyAgICAgdGhyb3cgZXJyb3I7IC8vIFJlLXRocm93IHRoZSBlcnJvciBmb3IgZnVydGhlciBoYW5kbGluZ1xyXG4vLyAgIH1cclxuLy8gfVxyXG5cclxuLy8gZXhwb3J0IGRlZmF1bHQgZGJDb25uZWN0OyAvLyBNYWtlIHN1cmUgdGhpcyBsaW5lIGlzIHByZXNlbnRcclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbi8vIGFzeW5jIGZ1bmN0aW9uIHRlc3RDb25uZWN0aW9uKCkge1xyXG4vLyAgIGNvbnN0IGRiID0gYXdhaXQgZGJDb25uZWN0KCk7XHJcbi8vICAgY29uc29sZS5sb2coJ0RhdGFiYXNlIGNvbm5lY3RlZCBzdWNjZXNzZnVsbHkhJyk7XHJcbi8vICAgYXdhaXQgZGIuZW5kKCk7XHJcbi8vIH1cclxuXHJcbi8vIHRlc3RDb25uZWN0aW9uKCkuY2F0Y2goY29uc29sZS5lcnJvcik7XHJcbiJdLCJuYW1lcyI6WyJteXNxbCIsImNvbm5lY3Rpb24iLCJkYkNvbm5lY3QiLCJjcmVhdGVDb25uZWN0aW9uIiwiaG9zdCIsInByb2Nlc3MiLCJlbnYiLCJNWVNRTF9IT1NUIiwidXNlciIsIk1ZU1FMX1VTRVIiLCJwYXNzd29yZCIsIk1ZU1FMX1BBU1NXT1JEIiwiZGF0YWJhc2UiLCJNWVNRTF9EQVRBQkFTRSIsIndhaXRGb3JDb25uZWN0aW9ucyIsImNvbm5lY3Rpb25MaW1pdCIsInF1ZXVlTGltaXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./lib/dbConnect.js\n");

/***/ }),

/***/ "(api)/./pages/api/register.js":
/*!*******************************!*\
  !*** ./pages/api/register.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var bcrypt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bcrypt */ \"bcrypt\");\n/* harmony import */ var bcrypt__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bcrypt__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_dbConnect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/dbConnect */ \"(api)/./lib/dbConnect.js\");\n// import connectDB from '../../lib/dbConnect';\n// import { dbConnect } from '../../lib/dbConnect';\n// import User from '../../models/User';\n// import bcrypt from 'bcrypt';\n// // export default async function handler(req, res) {\n// //     // Connect to the database\n// //     await connectDB();\n// //     if (req.method === 'POST') {\n// //         // Destructure the request body\n// //         const { name, email, password } = req.body;\n// //         // Basic validation to ensure required fields are present\n// //         if (!name || !email || !password) {\n// //             return res.status(400).json({ error: 'Please provide all the required fields: name, email, password' });\n// //         }\n// //         try {\n// //             // Check if the user already exists\n// //             const existingUser = await User.findOne({ email });\n// //             if (existingUser) {\n// //                 return res.status(400).json({ error: 'User with this email already exists' });\n// //             }\n// //             // Hash password with bcrypt\n// //             const hashedPassword = await bcrypt.hash(password, 10);\n// //             // Create new user\n// //             const user = await User.create({ name, email, password: hashedPassword });\n// //             // Return successful response with user data (excluding password)\n// //             res.status(201).json({\n// //                 message: 'User created successfully',\n// //                 user: {\n// //                     id: user._id,\n// //                     name: user.name,\n// //                     email: user.email,\n// //                 },\n// //             });\n// //         } catch (error) {\n// //             // Handle possible errors\n// //             res.status(500).json({ error: `Error creating user: ${error.message}` });\n// //         }\n// //     } else {\n// //         // Method not allowed response for non-POST requests\n// //         res.setHeader('Allow', ['POST']);\n// //         res.status(405).end(`Method ${req.method} Not Allowed`);\n// //     }\n// // }\n// // pages/register.js\n// import { useState } from 'react';\n// import Navbar from '../components/Navbar';\n// import Footer from '../components/Footer';\n// import styles from '../styles/Register.module.css';\n// export default function Register() {\n//     const [name, setName] = useState('');\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         const response = await fetch('/api/register', {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify({ name, email, password }),\n//         });\n//         const data = await response.json();\n//         console.log(data);\n//     };\n//     return (\n//         <div className={styles.pageWrapper}>\n//             <Navbar />\n//             <div className={styles.container}>\n//                 <div className={styles.formWrapper}>\n//                     <h1 className={styles.title}>Create Your Account</h1>\n//                     <p className={styles.subtitle}>Join us and explore endless possibilities</p>\n//                     <form onSubmit={handleSubmit} className={styles.form}>\n//                         <div className={styles.inputGroup}>\n//                             <label>Name</label>\n//                             <input\n//                                 type=\"text\"\n//                                 value={name}\n//                                 onChange={(e) => setName(e.target.value)}\n//                                 required\n//                                 className={styles.input}\n//                                 placeholder=\"Enter your name\"\n//                             />\n//                         </div>\n//                         <div className={styles.inputGroup}>\n//                             <label>Email</label>\n//                             <input\n//                                 type=\"email\"\n//                                 value={email}\n//                                 onChange={(e) => setEmail(e.target.value)}\n//                                 required\n//                                 className={styles.input}\n//                                 placeholder=\"Enter your email\"\n//                             />\n//                         </div>\n//                         <div className={styles.inputGroup}>\n//                             <label>Password</label>\n//                             <input\n//                                 type=\"password\"\n//                                 value={password}\n//                                 onChange={(e) => setPassword(e.target.value)}\n//                                 required\n//                                 className={styles.input}\n//                                 placeholder=\"Enter your password\"\n//                             />\n//                         </div>\n//                         <button type=\"submit\" className={styles.button}>Register</button>\n//                     </form>\n//                     <div className={styles.extra}>\n//                         <p>Already have an account? <a href=\"#\">Login here</a></p>\n//                     </div>\n//                 </div>\n//             </div>\n//             <Footer />\n//         </div>\n//     );\n// }\n// pages/api/register.js\n// import dbConnect from '../../lib/dbConnect';\n// import User from '../../models/User';\n// export default async function handler(req, res) {\n//     await dbConnect();\n//     if (req.method === 'POST') {\n//         const { name, email, password } = req.body;\n//         try {\n//             // Ensure all fields are filled out\n//             if (!name || !email || !password) {\n//                 return res.status(400).json({ message: 'Please fill all the fields.' });\n//             }\n//             // Check if the user already exists\n//             const userExists = await User.findOne({ email });\n//             if (userExists) {\n//                 return res.status(400).json({ message: 'User already exists.' });\n//             }\n//             // Create a new user\n//             const newUser = await User.create({\n//                 name,\n//                 email,\n//                 password,  // You should hash the password using bcrypt before storing it\n//             });\n//             return res.status(201).json({ message: 'User registered successfully!', user: newUser });\n//         } catch (error) {\n//             return res.status(500).json({ message: 'Server error', error });\n//         }\n//     } else {\n//         res.status(405).json({ message: 'Method not allowed' });\n//     }\n// }\n// \n// import { dbConnect } from '../../lib/dbConnect';\n// export default async function handler(req, res) {\n//   console.log(\"API called\");\n//   const connection = await dbConnect();  // Connect to MySQL\n//   if (req.method === 'POST') {\n//     const { name, email, password } = req.body;\n//     try {\n//       // Insert the new user into the MySQL table\n//       const query = 'INSERT INTO users (name, email, password) VALUES (?, ?, ?)';\n//       const values = [name, email, password];\n//       await connection.execute(query, values);\n//       res.status(200).json({ message: 'User registered successfully' });\n//     } catch (error) {\n//       console.error('Error inserting user into database:', error);\n//       res.status(500).json({ message: 'Internal Server Error' });\n//     }\n//   } else {\n//     res.status(405).json({ message: 'Method Not Allowed' });\n//   }\n// }\n// import { connectToDatabase } from '../../lib/dbConnect';\n// import mysql from 'mysql2/promise';\n// export default async function handler(req, res) {\n//     if (req.method === 'POST') {\n//         const { name, emailid, password } = req.body;\n//         const connection = await connectToDatabase();\n//         try {\n//             const [rows] = await connection.execute(\n//                 'INSERT INTO users (name, emailid, password) VALUES (?, ?, ?)',\n//                 [name, emailid, password]\n//             );\n//             res.status(201).json({ message: 'User registered successfully!' });\n//         } catch (error) {\n//             console.error(error);\n//             res.status(500).json({ message: 'Error registering user' });\n//         } finally {\n//             connection.end();\n//         }\n//     } else {\n//         res.setHeader('Allow', ['POST']);\n//         res.status(405).end(`Method ${req.method} Not Allowed`);\n//     }\n// }\n// import dbConnect from '../../lib/dbConnect';\n// import bcrypt from 'bcrypt';\n// export default async function handler(req, res) {\n//   if (req.method === 'POST') {\n//     const { name, emailid, password } = req.body;\n//     // Log the password value to ensure it's passed correctly\n//     console.log(\"Password received:\", password);\n//     if (!name || !emailid || !password) {\n//       return res.status(400).json({ message: 'Missing required fields' });\n//     }\n//     try {\n//       // Hashing the password and log the result\n//       const hashedPassword = await bcrypt.hash(password, 10);\n//       console.log(\"Hashed Password:\", hashedPassword);\n//       // Connecting to the database\n//       const connection = await dbConnect();\n//       console.log('Database connected successfully!');\n//       // Inserting the user into the database\n//       const [result] = await connection.execute(\n//         'INSERT INTO users (name, emailid, password) VALUES (?, ?, ?)',\n//         [name, emailid, hashedPassword]\n//       );\n//       res.status(200).json({ message: 'User registered successfully' });\n//     } catch (error) {\n//       console.error('Error registering user:', error);\n//       res.status(500).json({ message: 'Error registering user', error });\n//     }\n//   } else {\n//     res.status(405).json({ message: 'Method not allowed' });\n//   }\n// }\n // Ensure bcrypt is imported\n // Import dbConnect function\nasync function handler(req, res) {\n    if (req.method === \"POST\") {\n        const { name, email, password } = req.body;\n        // Hash the password before saving it to the database\n        const hashedPassword = await (0,bcrypt__WEBPACK_IMPORTED_MODULE_0__.hash)(password, 10);\n        try {\n            // Connect to the database\n            const connection = await (0,_lib_dbConnect__WEBPACK_IMPORTED_MODULE_1__.dbConnect)();\n            // Insert the new user into the users table\n            const query = \"INSERT INTO users (name, email, password) VALUES (?, ?, ?)\";\n            const values = [\n                name,\n                email,\n                hashedPassword\n            ];\n            await connection.execute(query, values); // Use connection to execute the query\n            res.status(200).json({\n                message: \"User registered successfully\"\n            });\n        } catch (error) {\n            console.error(\"Error inserting user into the database:\", error);\n            // Handle specific error for duplicate email entry\n            if (error.code === \"ER_DUP_ENTRY\") {\n                res.status(400).json({\n                    message: \"Email already exists.\"\n                });\n            } else {\n                res.status(500).json({\n                    message: \"Internal Server Error\"\n                });\n            }\n        }\n    } else {\n        res.status(405).json({\n            message: \"Method Not Allowed\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/register.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fregister&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cregister.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();