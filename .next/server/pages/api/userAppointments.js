"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/userAppointments";
exports.ids = ["pages/api/userAppointments"];
exports.modules = {

/***/ "jsonwebtoken":
/*!*******************************!*\
  !*** external "jsonwebtoken" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("jsonwebtoken");

/***/ }),

/***/ "mysql2/promise":
/*!*********************************!*\
  !*** external "mysql2/promise" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("mysql2/promise");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2FuserAppointments&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5CuserAppointments.js&middlewareConfigBase64=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2FuserAppointments&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5CuserAppointments.js&middlewareConfigBase64=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_userAppointments_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\userAppointments.js */ \"(api)/./pages/api/userAppointments.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_userAppointments_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_userAppointments_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/userAppointments\",\n        pathname: \"/api/userAppointments\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_userAppointments_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnVzZXJBcHBvaW50bWVudHMmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyU1Q2FwaSU1Q3VzZXJBcHBvaW50bWVudHMuanMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDOEQ7QUFDOUQ7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLDJEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQywyREFBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob3NwaXRhbC1tYW5hZ2VtZW50Lz84ZjA2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlc1xcXFxhcGlcXFxcdXNlckFwcG9pbnRtZW50cy5qc1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3VzZXJBcHBvaW50bWVudHNcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS91c2VyQXBwb2ludG1lbnRzXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCJcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2FuserAppointments&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5CuserAppointments.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/dbConnect.js":
/*!**************************!*\
  !*** ./lib/dbConnect.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dbConnect: () => (/* binding */ dbConnect)\n/* harmony export */ });\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mysql2/promise */ \"mysql2/promise\");\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mysql2_promise__WEBPACK_IMPORTED_MODULE_0__);\n// import mysql from 'mysql2/promise';\n// let connection;\n// const mysql = require('mysql2');\n// require('dotenv').config(); // Load environment variables\n// // Create a connection to the database\n// const connection = mysql.createConnection({\n//   host: process.env.DB_HOST,      // Use host from .env.local\n//   user: process.env.DB_USER,      // Use username from .env.local\n//   password: process.env.DB_PASSWORD, // Use blank password from .env.local\n//   database: process.env.DB_NAME    // Use database name from .env.local\n// });\n// // Connect to MySQL\n// connection.connect((err) => {\n//   if (err) {\n//     console.error('Error connecting: ' + err.stack);\n//     return;\n//   }\n//   console.log('Connected as id ' + connection.threadId);\n// });\n// module.exports = connection; // Export the connection for use in other files\n\nlet connection;\nasync function dbConnect() {\n    if (!connection) {\n        connection = await mysql2_promise__WEBPACK_IMPORTED_MODULE_0___default().createConnection({\n            host: process.env.MYSQL_HOST || \"localhost\",\n            user: process.env.MYSQL_USER || \"root\",\n            password: process.env.MYSQL_PASSWORD || \"\",\n            database: process.env.MYSQL_DATABASE || \"ram\",\n            waitForConnections: true,\n            connectionLimit: 10,\n            queueLimit: 0\n        });\n    }\n    return connection;\n} // import mysql from 'mysql2/promise';\n // async function dbConnect() {\n //   try {\n //     const connection = await mysql.createConnection({\n //       host: process.env.DB_HOST || 'localhost',\n //       user: process.env.DB_USER || 'root',\n //       password: process.env.DB_PASSWORD || '',\n //       database: process.env.DB_NAME || 'ram'\n //     });\n //     console.log('Database connected successfully!');\n //     return connection;\n //   } catch (error) {\n //     console.error('Database connection failed:', error);\n //     throw error; // Re-throw the error for further handling\n //   }\n // }\n // export default dbConnect; // Make sure this line is present\n // async function testConnection() {\n //   const db = await dbConnect();\n //   console.log('Database connected successfully!');\n //   await db.end();\n // }\n // testConnection().catch(console.error);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvZGJDb25uZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUlBLHNDQUFzQztBQUV0QyxrQkFBa0I7QUFHbEIsbUNBQW1DO0FBQ25DLDREQUE0RDtBQUU1RCx5Q0FBeUM7QUFDekMsOENBQThDO0FBQzlDLGdFQUFnRTtBQUNoRSxvRUFBb0U7QUFDcEUsNkVBQTZFO0FBQzdFLDBFQUEwRTtBQUMxRSxNQUFNO0FBRU4sc0JBQXNCO0FBQ3RCLGdDQUFnQztBQUNoQyxlQUFlO0FBQ2YsdURBQXVEO0FBQ3ZELGNBQWM7QUFDZCxNQUFNO0FBQ04sMkRBQTJEO0FBQzNELE1BQU07QUFFTiwrRUFBK0U7QUFFNUM7QUFFbkMsSUFBSUM7QUFFRyxlQUFlQztJQUNwQixJQUFJLENBQUNELFlBQVk7UUFDZkEsYUFBYSxNQUFNRCxzRUFBc0IsQ0FBQztZQUN4Q0ksTUFBTUMsUUFBUUMsR0FBRyxDQUFDQyxVQUFVLElBQUk7WUFDaENDLE1BQU1ILFFBQVFDLEdBQUcsQ0FBQ0csVUFBVSxJQUFJO1lBQ2hDQyxVQUFVTCxRQUFRQyxHQUFHLENBQUNLLGNBQWMsSUFBSTtZQUN4Q0MsVUFBVVAsUUFBUUMsR0FBRyxDQUFDTyxjQUFjLElBQUk7WUFDeENDLG9CQUFvQjtZQUNwQkMsaUJBQWlCO1lBQ2pCQyxZQUFZO1FBQ2Q7SUFDRjtJQUNBLE9BQU9mO0FBQ1QsRUFNQSxzQ0FBc0M7Q0FFdEMsK0JBQStCO0NBQy9CLFVBQVU7Q0FDVix3REFBd0Q7Q0FDeEQsa0RBQWtEO0NBQ2xELDZDQUE2QztDQUM3QyxpREFBaUQ7Q0FDakQsK0NBQStDO0NBQy9DLFVBQVU7Q0FDVix1REFBdUQ7Q0FDdkQseUJBQXlCO0NBQ3pCLHNCQUFzQjtDQUN0QiwyREFBMkQ7Q0FDM0QsOERBQThEO0NBQzlELE1BQU07Q0FDTixJQUFJO0NBRUosOERBQThEO0NBUTlELG9DQUFvQztDQUNwQyxrQ0FBa0M7Q0FDbEMscURBQXFEO0NBQ3JELG9CQUFvQjtDQUNwQixJQUFJO0NBRUoseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9zcGl0YWwtbWFuYWdlbWVudC8uL2xpYi9kYkNvbm5lY3QuanM/MWQzYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcblxyXG5cclxuLy8gaW1wb3J0IG15c3FsIGZyb20gJ215c3FsMi9wcm9taXNlJztcclxuXHJcbi8vIGxldCBjb25uZWN0aW9uO1xyXG5cclxuXHJcbi8vIGNvbnN0IG15c3FsID0gcmVxdWlyZSgnbXlzcWwyJyk7XHJcbi8vIHJlcXVpcmUoJ2RvdGVudicpLmNvbmZpZygpOyAvLyBMb2FkIGVudmlyb25tZW50IHZhcmlhYmxlc1xyXG5cclxuLy8gLy8gQ3JlYXRlIGEgY29ubmVjdGlvbiB0byB0aGUgZGF0YWJhc2VcclxuLy8gY29uc3QgY29ubmVjdGlvbiA9IG15c3FsLmNyZWF0ZUNvbm5lY3Rpb24oe1xyXG4vLyAgIGhvc3Q6IHByb2Nlc3MuZW52LkRCX0hPU1QsICAgICAgLy8gVXNlIGhvc3QgZnJvbSAuZW52LmxvY2FsXHJcbi8vICAgdXNlcjogcHJvY2Vzcy5lbnYuREJfVVNFUiwgICAgICAvLyBVc2UgdXNlcm5hbWUgZnJvbSAuZW52LmxvY2FsXHJcbi8vICAgcGFzc3dvcmQ6IHByb2Nlc3MuZW52LkRCX1BBU1NXT1JELCAvLyBVc2UgYmxhbmsgcGFzc3dvcmQgZnJvbSAuZW52LmxvY2FsXHJcbi8vICAgZGF0YWJhc2U6IHByb2Nlc3MuZW52LkRCX05BTUUgICAgLy8gVXNlIGRhdGFiYXNlIG5hbWUgZnJvbSAuZW52LmxvY2FsXHJcbi8vIH0pO1xyXG5cclxuLy8gLy8gQ29ubmVjdCB0byBNeVNRTFxyXG4vLyBjb25uZWN0aW9uLmNvbm5lY3QoKGVycikgPT4ge1xyXG4vLyAgIGlmIChlcnIpIHtcclxuLy8gICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGNvbm5lY3Rpbmc6ICcgKyBlcnIuc3RhY2spO1xyXG4vLyAgICAgcmV0dXJuO1xyXG4vLyAgIH1cclxuLy8gICBjb25zb2xlLmxvZygnQ29ubmVjdGVkIGFzIGlkICcgKyBjb25uZWN0aW9uLnRocmVhZElkKTtcclxuLy8gfSk7XHJcblxyXG4vLyBtb2R1bGUuZXhwb3J0cyA9IGNvbm5lY3Rpb247IC8vIEV4cG9ydCB0aGUgY29ubmVjdGlvbiBmb3IgdXNlIGluIG90aGVyIGZpbGVzXHJcblxyXG5pbXBvcnQgbXlzcWwgZnJvbSAnbXlzcWwyL3Byb21pc2UnO1xyXG5cclxubGV0IGNvbm5lY3Rpb247XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZGJDb25uZWN0KCkge1xyXG4gIGlmICghY29ubmVjdGlvbikge1xyXG4gICAgY29ubmVjdGlvbiA9IGF3YWl0IG15c3FsLmNyZWF0ZUNvbm5lY3Rpb24oe1xyXG4gICAgICBob3N0OiBwcm9jZXNzLmVudi5NWVNRTF9IT1NUIHx8ICdsb2NhbGhvc3QnLFxyXG4gICAgICB1c2VyOiBwcm9jZXNzLmVudi5NWVNRTF9VU0VSIHx8ICdyb290JyxcclxuICAgICAgcGFzc3dvcmQ6IHByb2Nlc3MuZW52Lk1ZU1FMX1BBU1NXT1JEIHx8ICcnLFxyXG4gICAgICBkYXRhYmFzZTogcHJvY2Vzcy5lbnYuTVlTUUxfREFUQUJBU0UgfHwgJ3JhbScsXHJcbiAgICAgIHdhaXRGb3JDb25uZWN0aW9uczogdHJ1ZSxcclxuICAgICAgY29ubmVjdGlvbkxpbWl0OiAxMCxcclxuICAgICAgcXVldWVMaW1pdDogMCxcclxuICAgIH0pO1xyXG4gIH1cclxuICByZXR1cm4gY29ubmVjdGlvbjtcclxufVxyXG5cclxuXHJcblxyXG5cclxuXHJcbi8vIGltcG9ydCBteXNxbCBmcm9tICdteXNxbDIvcHJvbWlzZSc7XHJcblxyXG4vLyBhc3luYyBmdW5jdGlvbiBkYkNvbm5lY3QoKSB7XHJcbi8vICAgdHJ5IHtcclxuLy8gICAgIGNvbnN0IGNvbm5lY3Rpb24gPSBhd2FpdCBteXNxbC5jcmVhdGVDb25uZWN0aW9uKHtcclxuLy8gICAgICAgaG9zdDogcHJvY2Vzcy5lbnYuREJfSE9TVCB8fCAnbG9jYWxob3N0JyxcclxuLy8gICAgICAgdXNlcjogcHJvY2Vzcy5lbnYuREJfVVNFUiB8fCAncm9vdCcsXHJcbi8vICAgICAgIHBhc3N3b3JkOiBwcm9jZXNzLmVudi5EQl9QQVNTV09SRCB8fCAnJyxcclxuLy8gICAgICAgZGF0YWJhc2U6IHByb2Nlc3MuZW52LkRCX05BTUUgfHwgJ3JhbSdcclxuLy8gICAgIH0pO1xyXG4vLyAgICAgY29uc29sZS5sb2coJ0RhdGFiYXNlIGNvbm5lY3RlZCBzdWNjZXNzZnVsbHkhJyk7XHJcbi8vICAgICByZXR1cm4gY29ubmVjdGlvbjtcclxuLy8gICB9IGNhdGNoIChlcnJvcikge1xyXG4vLyAgICAgY29uc29sZS5lcnJvcignRGF0YWJhc2UgY29ubmVjdGlvbiBmYWlsZWQ6JywgZXJyb3IpO1xyXG4vLyAgICAgdGhyb3cgZXJyb3I7IC8vIFJlLXRocm93IHRoZSBlcnJvciBmb3IgZnVydGhlciBoYW5kbGluZ1xyXG4vLyAgIH1cclxuLy8gfVxyXG5cclxuLy8gZXhwb3J0IGRlZmF1bHQgZGJDb25uZWN0OyAvLyBNYWtlIHN1cmUgdGhpcyBsaW5lIGlzIHByZXNlbnRcclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbi8vIGFzeW5jIGZ1bmN0aW9uIHRlc3RDb25uZWN0aW9uKCkge1xyXG4vLyAgIGNvbnN0IGRiID0gYXdhaXQgZGJDb25uZWN0KCk7XHJcbi8vICAgY29uc29sZS5sb2coJ0RhdGFiYXNlIGNvbm5lY3RlZCBzdWNjZXNzZnVsbHkhJyk7XHJcbi8vICAgYXdhaXQgZGIuZW5kKCk7XHJcbi8vIH1cclxuXHJcbi8vIHRlc3RDb25uZWN0aW9uKCkuY2F0Y2goY29uc29sZS5lcnJvcik7XHJcbiJdLCJuYW1lcyI6WyJteXNxbCIsImNvbm5lY3Rpb24iLCJkYkNvbm5lY3QiLCJjcmVhdGVDb25uZWN0aW9uIiwiaG9zdCIsInByb2Nlc3MiLCJlbnYiLCJNWVNRTF9IT1NUIiwidXNlciIsIk1ZU1FMX1VTRVIiLCJwYXNzd29yZCIsIk1ZU1FMX1BBU1NXT1JEIiwiZGF0YWJhc2UiLCJNWVNRTF9EQVRBQkFTRSIsIndhaXRGb3JDb25uZWN0aW9ucyIsImNvbm5lY3Rpb25MaW1pdCIsInF1ZXVlTGltaXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./lib/dbConnect.js\n");

/***/ }),

/***/ "(api)/./pages/api/userAppointments.js":
/*!***************************************!*\
  !*** ./pages/api/userAppointments.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_dbConnect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/dbConnect */ \"(api)/./lib/dbConnect.js\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jsonwebtoken */ \"jsonwebtoken\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__);\n// import dbConnect from '../../lib/dbConnect';\n// import jwt from 'jsonwebtoken';\n// export default async function handler(req, res) {\n//     if (req.method === 'GET') {\n//         const token = req.headers.authorization?.split(' ')[1]; // Bearer token\n//         if (!token) {\n//             return res.status(401).json({ error: 'Unauthorized' });\n//         }\n//         try {\n//             const decoded = jwt.verify(token, process.env.JWT_SECRET);\n//             const userId = decoded.id;\n//             await dbConnect();\n//             const query = 'SELECT * FROM appointments WHERE user_id = ?';\n//             const values = [userId];\n//             const appointments = await db.query(query, values);\n//             return res.status(200).json(appointments);\n//         } catch (error) {\n//             return res.status(500).json({ error: 'Database error' });\n//         }\n//     }\n//     res.setHeader('Allow', ['GET']);\n//     res.status(405).end(`Method ${req.method} Not Allowed`);\n// }\n// pages/api/userAppointments.js\n// import { dbConnect } from '../../lib/dbConnect';\n// import jwt from 'jsonwebtoken';\n// export default async function handler(req, res) {\n//   const connection = await dbConnect();\n//   if (req.method === 'GET') {\n//     const token = req.headers.authorization?.split(' ')[1];\n//     if (!token) {\n//       return res.status(401).json({ message: 'Unauthorized' });\n//     }\n//     try {\n//       const decoded = jwt.verify(token, process.env.JWT_SECRET);\n//       const userEmail = decoded.email; // Assuming the email is in the token\n//       // Fetch appointments based on user email\n//       const [appointments] = await connection.execute(\n//         'SELECT * FROM appointments WHERE user_email = ?', // Make sure your appointments table has a user_email field\n//         [userEmail]\n//       );\n//       return res.status(200).json(appointments);\n//     } catch (error) {\n//       return res.status(500).json({ message: 'Failed to fetch appointments', error: error.message });\n//     }\n//   } else {\n//     res.setHeader('Allow', ['GET']);\n//     return res.status(405).end(`Method ${req.method} Not Allowed`);\n//   }\n// }\n// // pages/api/userAppointments.js---------------------------------------\n// import { dbConnect } from '../../lib/dbConnect';\n// import jwt from 'jsonwebtoken';\n// export default async function handler(req, res) {\n//   const connection = await dbConnect();\n//   if (req.method === 'GET') {\n//     const token = req.headers.authorization?.split(' ')[1];\n//     if (!token) {\n//       return res.status(401).json({ message: 'Unauthorized' });\n//     }\n//     try {\n//       const decoded = jwt.verify(token, process.env.JWT_SECRET);\n//       const userEmail = decoded.email; // Assuming the email is in the token\n//       // Fetch appointments based on user email\n//       const [appointments] = await connection.execute(\n//         'SELECT * FROM appointments WHERE user_email = ?',\n//         [userEmail]\n//       );\n//       // Send appointments as JSON response\n//       return res.status(200).json(appointments); // Send the appointments data\n//     } catch (error) {\n//       return res.status(500).json({ message: 'Failed to fetch appointments', error: error.message });\n//     }\n//   } else {\n//     res.setHeader('Allow', ['GET']);\n//     return res.status(405).end(`Method ${req.method} Not Allowed`);\n//   }\n// }\n// pages/api/userAppointments.js\n// import { dbConnect } from '../../lib/dbConnect'; // Make sure this path is correct\n// import jwt from 'jsonwebtoken';\n// export default async function handler(req, res) {\n//     // Connect to the database\n//     const connection = await dbConnect();\n//     // Check if the request method is GET\n//     if (req.method === 'GET') {\n//         const token = req.headers.authorization?.split(' ')[1]; // Get the token from the authorization header\n//         // If no token is provided, return Unauthorized\n//         if (!token) {\n//             return res.status(401).json({ message: 'Unauthorized' });\n//         }\n//         try {\n//             // Verify the token and extract the email\n//             const decoded = jwt.verify(token, process.env.JWT_SECRET);\n//             const email = decoded.email;\n//             // Fetch appointments for the user with the given email\n//             const query = 'SELECT * FROM appointments WHERE user_email = ?';\n//             const values = [email];\n//             const [appointments] = await connection.execute(query, values);\n//             return res.status(200).json({ appointments }); // Return appointments as JSON\n//         } catch (error) {\n//             console.error('Error fetching appointments:', error);\n//             return res.status(500).json({ message: 'Internal Server Error' });\n//         } finally {\n//             await connection.end(); // Close the connection\n//         }\n//     }\n//     // If the method is not GET, return Method Not Allowed\n//     res.setHeader('Allow', ['GET']);\n//     return res.status(405).end(`Method ${req.method} Not Allowed`);\n// }\n// import { dbConnect } from '../../lib/dbConnect';\n// import jwt from 'jsonwebtoken';\n// export default async function handler(req, res) {\n//     if (req.method === 'GET') { // Change to GET for fetching appointments\n//         const token = req.headers.authorization?.split(' ')[1];\n//         if (!token) {\n//             return res.status(401).json({ error: 'Unauthorized' });\n//         }\n//         try {\n//             // Verify the token and get the user's email\n//             const decoded = jwt.verify(token, process.env.JWT_SECRET);\n//             const userId = decoded.id;\n//             // Connect to the database\n//             const connection = await dbConnect();\n//             // Fetch appointments based on user ID\n//             const [rows] = await connection.execute('SELECT * FROM appointments WHERE user_id = ?', [userId]);\n//             // Close the connection (if not using a connection pool)\n//             await connection.end(); // Make sure this line is in the right place\n//             return res.status(200).json(rows);\n//         } catch (error) {\n//             console.error('Error fetching appointments:', error);\n//             return res.status(500).json({ error: 'Error fetching appointments' });\n//         }\n//     } else {\n//         res.setHeader('Allow', ['GET']);\n//         return res.status(405).end(`Method ${req.method} Not Allowed`);\n//     }\n// }\n// import { dbConnect } from '../../lib/dbConnect';\n// import jwt from 'jsonwebtoken';\n// export default async function handler(req, res) {\n//     if (req.method === 'GET') { \n//         const authHeader = req.headers.authorization;\n//         const token = authHeader?.split(' ')[1]; // Extract the token from \"Bearer <token>\"\n//         // Check if the token exists\n//         if (!token) {\n//             return res.status(401).json({ error: 'Unauthorized: Token missing' });\n//         }\n//         try {\n//             // Verify the JWT token\n//             const decoded = jwt.verify(token, process.env.JWT_SECRET);\n//             const userId = decoded.id;\n//             // Connect to the database\n//             const connection = await dbConnect();\n//             // Fetch the appointments for the logged-in user by user ID\n//             const [rows] = await connection.execute('SELECT * FROM appointments WHERE user_id = ?', [userId]);\n//             // Close the connection after the query\n//             await connection.end();\n//             return res.status(200).json(rows);\n//         } catch (error) {\n//             // Handle JWT errors (like malformed or expired tokens)\n//             if (error.name === 'JsonWebTokenError') {\n//                 return res.status(401).json({ error: 'Invalid or malformed token' });\n//             } else if (error.name === 'TokenExpiredError') {\n//                 return res.status(401).json({ error: 'Token expired' });\n//             } else {\n//                 console.error('Error fetching appointments:', error);\n//                 return res.status(500).json({ error: 'Server error while fetching appointments' });\n//             }\n//         }\n//     } else {\n//         res.setHeader('Allow', ['GET']);\n//         return res.status(405).json({ error: `Method ${req.method} Not Allowed` });\n//     }\n// }\n\n\nasync function handler(req, res) {\n    if (req.method === \"GET\") {\n        const authHeader = req.headers.authorization;\n        const token = authHeader?.split(\" \")[1]; // Extract the token from \"Bearer <token>\"\n        // Check if the token exists\n        if (!token) {\n            return res.status(401).json({\n                error: \"Unauthorized: Token missing\"\n            });\n        }\n        try {\n            // Verify the JWT token\n            const decoded = jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().verify(token, process.env.JWT_SECRET);\n            const userId = decoded.id;\n            // Connect to the database\n            const connection = await (0,_lib_dbConnect__WEBPACK_IMPORTED_MODULE_0__.dbConnect)();\n            // Fetch the appointments for the logged-in user by user ID\n            const [rows] = await connection.execute(\"SELECT * FROM appointments WHERE user_id = ?\", [\n                userId\n            ]);\n            // Close the connection after the query\n            await connection.end();\n            return res.status(200).json(rows);\n        } catch (error) {\n            // Handle JWT errors (like malformed or expired tokens)\n            if (error.name === \"JsonWebTokenError\") {\n                return res.status(401).json({\n                    error: \"Invalid or malformed token\"\n                });\n            } else if (error.name === \"TokenExpiredError\") {\n                return res.status(401).json({\n                    error: \"Token expired\"\n                });\n            } else {\n                console.error(\"Error fetching appointments:\", error);\n                return res.status(500).json({\n                    error: \"Server error while fetching appointments: \" + error.message\n                });\n            }\n        }\n    } else {\n        res.setHeader(\"Allow\", [\n            \"GET\"\n        ]);\n        return res.status(405).json({\n            error: `Method ${req.method} Not Allowed`\n        });\n    }\n} // pages/api/userAppointments.js\n // import pool from '../../db'; // Adjust the import path as necessary\n // import { pool } from '../../lib/db';\n // export default async function handler(req, res) {\n //     if (req.method === 'GET') {\n //         try {\n //             const token = req.headers.authorization.split(' ')[1]; // Assuming token is passed as 'Bearer token'\n //             const userId = 'your_user_id'; // Replace this with your logic to extract user ID from token\n //             const [appointments] = await pool.query('SELECT * FROM appointments WHERE userId = ?', [userId]);\n //             res.status(200).json(appointments);\n //         } catch (error) {\n //             console.error('Error fetching appointments:', error);\n //             res.status(500).json({ message: 'Error fetching appointments' });\n //         }\n //     } else {\n //         res.setHeader('Allow', ['GET']);\n //         res.status(405).end(`Method ${req.method} Not Allowed`);\n //     }\n // }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/userAppointments.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2FuserAppointments&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5CuserAppointments.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();